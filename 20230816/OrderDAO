package talkdog.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import talkdog.vo.OrderVO;
import talkdog.vo.AdminVO;
import talkdog.vo.CartVO;

public class OrderDAO {

   private String query; // 멤버 변수 지정
   private PreparedStatement pstmt;
   private ResultSet rs;
   
   private Connection con;
    public OrderDAO(Connection con) {   // setter/getter 말고 생성자로
      this.con = con;
   }	
   
	
    // 주문내역 등록 메서드
    public boolean ordInsert(OrderVO ovo) {
		try {
			query = " INSERT INTO order_ " +
					" VALUES(?,SYSDATE,NVL(?, '배송 준비중'),?,?,?) ";			//insert 쿼리문
			pstmt = con.prepareStatement(query);
			pstmt.setString(1, ovo.getOrdNo());
			pstmt.setString(2, ovo.getOrdIng());
			pstmt.setInt(3, ovo.getCartNo());
			pstmt.setString(4, ovo.getAdmId());
			pstmt.setLong(5, ovo.getInvoiceNo());			//송장번호 추후등록
			
			int result = pstmt.executeUpdate();
			if (result == 1) {
				return true;
			}
		} catch (SQLException e) {
			e.printStackTrace();
		}
    	
    	return false;
    }

    // 주문내역 전체조회(로그인한 아이디의)
    public List<OrderVO> ordSelectAll(String ordNo, String sid) {
    	List<OrderVO> ovoList = new ArrayList<OrderVO>();
    	OrderVO ovo = null;
    	try {
    		query = " SELECT * FROM order_ WHERE adm_id = '" + sid + "' ORDER BY ord_date DESC ";
    		pstmt = con.prepareStatement(query);
    		rs = pstmt.executeQuery();
    		while (rs.next() == true) {				 
    			ovo = new OrderVO();
    			ovo.setOrdNo(rs.getString("ord_no"));
    			ovo.setOrdDate(rs.getDate("ord_date"));
    			ovo.setOrdIng(rs.getString("ord_ing"));
    			ovo.setCartNo(rs.getInt("cart_no"));
    			ovo.setInvoiceNo(rs.getInt("invoice_no"));
    			ovo.setAdmId(rs.getString("adm_id"));
    			ovoList.add(ovo);
    		}
    	} catch (SQLException e) {
    		e.printStackTrace();
    	} 
    	return ovoList;
    }

//    
//    //주문내역 개수
//	public int ordCount(String ordNo) {
//		int cnt = 0;
//		try {
//			query = " SELECT COUNT(*) FROM order_ ";
//			
//			if(!ordNo.equals("")) {
//			    query += " WHERE ordNo = ?";
//			    pstmt.setString(1, ordNo);
//			}
//			
//			pstmt = con.prepareStatement(query);
//			rs = pstmt.executeQuery();
//			if (rs.next() == true) {				 
//				cnt = rs.getInt(1);
//			}
//		} catch (SQLException e) {
//			e.printStackTrace();
//		}
//		return cnt;
//	}

    
    // 주문내역 상세조회
    public OrderVO ordSelect(String ordNo) {	// ordNo: 조회할 주문번호
    	OrderVO ovo = null;
       	try {
    			query = " SELECT * FROM ORDER_ WHERE ord_no=? ";
    			pstmt = con.prepareStatement(query);
    			pstmt.setString(1, ordNo);

        		rs = pstmt.executeQuery(); // rs.next 시 다음 값이 있다면 true, 없다면 null 반환
        		while (rs.next()==true) { // 조회된 레코드들이 있다면
        			ovo = new OrderVO(); // MemoVO객체를 생성, 아니면 생성X
                    ovo.setAdmId(rs.getString("admId"));
                    ovo.setCartNo(rs.getInt("cartNo"));
                    ovo.setOrdDate(rs.getDate("ordDate"));
                    ovo.setOrdIng(rs.getString("ordIng"));
                    ovo.setInvoiceNo(rs.getInt("invoiceNo"));
        		}
        	} catch (SQLException e) {
        		e.printStackTrace();
        	} 
        	return ovo;
    }

    // 주문내역 수정 메서드
    public boolean ordUpdate(OrderVO ovo) {
    	try {
             query = " UPDATE order_ " +
                     "SET ord_ing = ?, invoice_no = ? " +
                     "WHERE ord_no = ?";
            pstmt = con.prepareStatement(query);
            pstmt.setString(1, ovo.getOrdIng());
            pstmt.setLong(2, ovo.getInvoiceNo());
            int result = pstmt.executeUpdate();
            if (result == 1) {
                return true;
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return false;
    }
    
    
//    // AdminVO 클래스의 객체를 받아와서 admName과 admPhone을 반환하는 메서드
//    public AdminVO getAdminInfo(String sid) {
//    	AdminVO avo = null;
//    	try {
//			query = " SELECT adm_name, adm_phone FROM admin WHERE adm_id = ? ";
//			pstmt = con.prepareStatement(query);
//			pstmt.setString(1, sid);
//    		rs = pstmt.executeQuery(); // rs.next 시 다음 값이 있다면 true, 없다면 null 반환
//    		while (rs.next()==true) { // 조회된 레코드들이 있다면
//    			avo = new AdminVO(); // MemoVO객체를 생성, 아니면 생성X
//    			avo.setAdmName(rs.getString("adm_name"));
//                avo.setAdmPhone(rs.getString("adm_phone"));
//                avo.setAdmPhone(rs.getString("adm_id"));
//    		}
//    	} catch (SQLException e) {
//    		e.printStackTrace();
//    	} 
//        return avo;
//    }
    
  //pId로 productVO  가져옴
	   public CartVO getCvo(int cartNo) {
		   //장바구니 전체조회 시 -> pid로 상품명, 상품가격을 담은 vo반환메서드
		   
		   CartVO cvo = null;
		   
		   try {
				query = "SELECT * FROM cart WHERE cart_no=?";
				
				pstmt = con.prepareStatement(query); 	//prepareStatement는 쿼리를 미리 준비해뒀으니까 매개변수로 query받음
				pstmt.setInt(1, cartNo);
				
				rs = pstmt.executeQuery();
				
				if(rs.next()) {		
					cvo = new CartVO();		// rs가 있을 때에만 qvo 생성
					cvo.setCartQuan(rs.getInt("cartQuan")); //수량
					cvo.setCartOpt(rs.getString("cartOpt"));//옵션 
				}
			} catch (SQLException e) {
				e.printStackTrace();
			}
			return cvo;
	   }
    
}
